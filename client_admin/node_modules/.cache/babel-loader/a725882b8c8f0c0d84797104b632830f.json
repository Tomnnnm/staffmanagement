{"remainingRequest":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/babel-loader/lib/index.js!/Users/tom/Desktop/CS763460_20220314091634/client_admin/src/mixins/page.js","dependencies":[{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/src/mixins/page.js","mtime":1649294744000},{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/cache-loader/dist/cjs.js","mtime":1652753645010},{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/babel-loader/lib/index.js","mtime":1652753645271}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tom/Desktop/CS763460_20220314091634/client_admin/src/mixins/page.js"],"names":["data","opens","$","db","get","title","url","url_add","url_del","url_set","url_get_obj","url_get_list","url_submit","url_upload","url_import","url_export","list","vm","form","obj","query","config","page","size","loading","showing","posting","select","count","show","bl","display","field","tip","mode","clear_list","message","selects","page_now","select_state","sort_key","query_set","father_id","selection","oauth","user","$store","state","tip_show","user_group","methods","events","name","param1","param2","param3","func","f","undefined","add","param","pm","Object","assign","msg","ret","del","del_show","o","id","_this","confirm","set","includeZero","set_before","delete","k","toLocaleLowerCase","indexOf","Date","toStr","batchSet","q","orderby","json","result","get_list","get_obj","sort","check_auth","auth","web","length","$get_auth","user_id","token","commit","$get_user","signIn","$router","push","path","init","upload","$toast","add_main","value","$post","error","del_main","$get","del_after","set_main","keys","toUrl","status","set_after","get_main","get_create","get_obj_check","get_obj_main","res","console","log","get_obj_after","get_list_main","history","pushState","clear","addList","get_list_after","search","first","qy","next","page_count","prev","reset","submit","submit_before","key","$toTime","err","submit_check","submit_main","method","$toUrl","submit_after","go","n","goTo","p","init_before","init_main","init_after","upload_main","uploading","$upload","upload_after","end_before","select_all","s","i","replace","select_change","has","arr","split","splice","join","substring","select_has","ids","selected","index","page_change","e","Number","target","isNaN","get_name","arr_str","span","cancel","import_db","file","http","export_db","window","location","href","opens_has_sub","opens_change","opens_has","opens_lv","fid","lv","num","filterState","row","selectionChange","val","delInfo","$message","type","$confirm","confirmButtonText","cancelButtonText","then","delAll","catch","uploadFile","FormData","append","computed","Math","ceil","created","$route","mounted","beforeDestroy"],"mappings":"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","sourcesContent":["export default {\n    data: function data() {\n        var opens = $.db.get('opens') || [0];\n        // var opens_str = ;\n        // if(opens_str){\n        // \topens = opens_str;\n        // }\n        return {\n            // 标题\n            title: \"\",\n\n            // 地址\n            url: \"\",\n\n            // 添加地址\n            url_add: \"\",\n\n            // 删除地址\n            url_del: \"\",\n\n            // 修改地址\n            url_set: \"\",\n\n            // 查询对象地址\n            url_get_obj: \"\",\n\n            // 查询列表地址\n            url_get_list: \"\",\n\n            // 表单提交地址\n            url_submit: \"\",\n\n            // 上传提交地址\n            url_upload: \"\",\n\n            // 导入数据地址\n            url_import: \"\",\n\n            // 导出数据地址\n            url_export: \"\",\n\n            // 获取的列表\n            list: [],\n\n            // 视图&验证模型\n            vm: {},\n\n            // 提交表单\n            form: {},\n\n            // 线上对象\n            obj: {},\n\n            // 查询参数\n            query: {\n                // 当前页面\n                // page: 1,\n                // 页面大小\n                // size: 10\n            },\n\n            // 配置\n            config: {\n                // 默认当前页面\n                page: 1,\n                // 默认页面大小\n                size: 10\n            },\n\n            // 加载进度\n            loading: 0,\n\n            // 显示进度\n            showing: 0,\n\n            // 提交进度\n            posting: 0,\n\n            // 选中项\n            select: $.db.get('select'),\n\n            // 查询结果匹配数统计\n            count: 0,\n\n            // 显示隐藏，true显示，false隐藏\n            show: false,\n\n            // 响应成功或失败\n            bl: false,\n\n            // 显示方式\n            display: \"\",\n\n            // 关键字段\n            field: \"\",\n\n            // 响应提示\n            tip: \"\",\n\n            // 默认请求方式\n            mode: \"list\",\n\n            // 清除列表\n            clear_list: true,\n\n            // 响应错误消息\n            message: \"\",\n\n            // 选中集\n            selects: \"\",\n\n            // 当前页, 用于跳转页面\n            page_now: 1,\n\n            // 选择项状态\n            select_state: false,\n\n            // 排序键，用于拖拽修改排序\n            sort_key: \"display\",\n\n            // 修改条件\n            query_set: {},\n\n            // 展开的上级id\n            opens: opens,\n\n            // 上级ID: father_id\n            father_id: \"father_id\",\n\n            // 选中集合\n            selection: [],\n\n            // 登录权限\n            oauth: {\n                \"signIn\": true,\n                \"gm\": 0,\n                \"user_admin\": []\n            },\n\n            // 登录用户\n            user: this.$store.state.user,\n\n            // 修改提示\n            tip_show: true,\n\n            // 所在用户组\n            user_group: this.$store.state.user.user_group\n        };\n    },\n    methods: {\n\n        /**\n         * @description 事件管理, 用于管理函数\n         * @param {String} name 事件名\n         * @param {Object} param1 参数1\n         * @param {Object} param2 参数2\n         * @param {Object} param3 参数3\n         * @return {Object} 返回事件特定值\n         */\n        events: function events(name, param1, param2, param3) {\n            if (this[name]) {\n                if (param3) {\n                    return this[name](param1, param2, param3);\n                } else {\n                    return this[name](param1, param2);\n                }\n            } else {\n                return null;\n            }\n        },\n\n        /**\n         * 回调函数(中控)\n         * @param {String} name 函数名\n         * @param {Object} param1\n         * @param {Object} param2\n         * @param {Object} param3\n         * @return {Object} 任意值\n         */\n        func: function func(name, param1, param2, param3) {\n            var f = this[name];\n            if (f) {\n                if (param1 === undefined) {\n                    return f();\n                } else if (param2 === undefined) {\n                    return f(param1);\n                } else if (param3 === undefined) {\n                    return f(param1, param2);\n                } else {\n                    return f(param1, param2, param3);\n                }\n            } else {\n                return null;\n            }\n        },\n\n        /**\n         * @description 添加数据\n         * @param {Object} param 要添加的数据\n         * @param {Function} func 回调函数\n         */\n        add: function add(param, func) {\n            if (!param) {\n                param = this.obj;\n            }\n            var pm = this.events(\"add_before\", Object.assign({}, param)) || param;\n            var msg = this.events(\"add_check\", pm);\n            var ret;\n            if (!msg) {\n                ret = this.events(\"add_main\", pm, func);\n            }\n            return ret;\n        },\n\n        /**\n         * @description 删除数据\n         * @param {Object} param 查询条件\n         */\n        del: function del(param, func) {\n            if (!param) {\n                param = this.query;\n            }\n            var pm = this.events(\"del_before\", Object.assign({}, param)) || param;\n            var msg = this.events(\"del_check\", pm);\n            var ret;\n            if (!msg) {\n                ret = this.events(\"del_main\", pm, func);\n            }\n            return ret;\n        },\n\n        del_show: function(o, id) {\n            var _this = this;\n            $.confirm('删除后将无法回复!<br/>是否确定要删除?', function() {\n                // console.log('确定删除!');\n                var query = {};\n                query[id] = o[id];\n                _this.del(query, function() {\n                    _this.list.del(query);\n                    _this.count -= 1;\n                });\n            }, function() {\n                // console.log('取消删除!')\n            })\n        },\n\n        /**\n         * @description 修改数据\n         * @param {Object} param 修改项\n         * @param {String} query 查询条件\n         * @param {Boolean} includeZero 是否包括0\n         */\n        set: function set(param, query, func, includeZero) {\n            if (!param) {\n                param = this.obj;\n            }\n            if (query) {\n                this.query_set = query;\n            } else {\n                this.query_set = Object.assign({}, this.query);\n            }\n            var pm = this.events(\"set_before\", Object.assign({}, param), includeZero) || param;\n            var msg = this.events(\"set_check\", pm);\n            var ret;\n            if (!msg) {\n                ret = this.events(\"set_main\", pm, func);\n            }\n            return ret;\n        },\n\n        /**\n         * 修改前事件\n         * @param {Object} param\n         * @param {Boolean} includeZero 是否删除0值项\n         * @param {Object} 返回新的参数\n         */\n        set_before: function set_before(param, includeZero) {\n            var pm = $.delete(param, includeZero);\n            for (var k in pm) {\n                if (k.toLocaleLowerCase().indexOf('time') !== -1 && pm[k].indexOf('T') !== -1) {\n                    pm[k] = new Date(pm[k]).toStr('yyyy-MM-dd 00:00:00');\n                }\n            }\n            return pm;\n        },\n\n        /**\n         * 批量修改\n         */\n        batchSet: function batchSet() {\n            var _this = this;\n            $.confirm('批量修改数据无法挽回<br/>确定要操作吗?', function() {\n                var q = Object.assign({}, _this.query, _this.query_set);\n                q[_this.field] = _this.selects;\n                delete q.page;\n                delete q.size;\n                delete q.orderby;\n                _this.set(_this.form, q, function(json) {\n                    if (json.result) {\n                        _this.show = false;\n                        _this.get();\n                    }\n                }, true);\n            });\n        },\n\n        /**\n         * @description 查询多条数据\n         * @param {Object} query 查询条件\n         * @param {Function} func 回调函数\n         */\n        get_list: function get_list(param, func) {\n            if (!param) {\n                param = this.query;\n            }\n            var pm = this.events(\"get_list_before\", Object.assign({}, param)) || param;\n            var msg = this.events(\"get_list_check\", pm);\n            var ret;\n            if (!msg) {\n                ret = this.events(\"get_list_main\", pm, func);\n            }\n            return ret;\n        },\n\n        /**\n         * @description 查询一条数据\n         * @param {Object} query 查询条件\n         * @func {Function} 回调函数\n         */\n        get_obj: function get_obj(param, func) {\n            // console.log(\"获取对象\", param)\n            if (!param) {\n                param = this.query;\n            }\n            var pm = this.events(\"get_obj_before\", Object.assign({}, param)) || param;\n            var msg = this.events(\"get_obj_check\", pm);\n            var ret;\n            if (!msg) {\n                ret = this.events(\"get_obj_main\", pm, func);\n            } else if (func) {\n                func();\n            }\n            return ret;\n        },\n\n        /**\n         * 条件排序\n         * @param {Object} param\n         * @param {Object} func\n         */\n        sort: function sort(param, func) {\n            var pm = this.events(\"sort_before\", Object.assign({}, param)) || param;\n            var msg = this.events(\"sort_check\", pm);\n            var ret;\n            if (!msg) {\n                ret = this.events(\"sort_main\", pm, func);\n            }\n            return ret;\n        },\n\n        /**\n         * 检测授权，有权限后回调函数\n         * @param {Function} func 回调函数\n         */\n        check_auth: function check_auth(func) {\n            // 取出权限\n            var auth = this.$store.state.web.auth;\n            // 权限长度不为空\n            if (!auth || auth.length === 0) {\n                this.$get_auth(this.user.user_group);\n            }\n\n            // 判断用户ID\n            if (!this.user.user_id) {\n                var token = $.db.get(\"token\");\n                if (token) {\n\t\t\t\t\t// 存储token\n                    this.$store.commit(\"user_set\", {\n                        token\n                    });\n\t\t\t\t\t// 获取登录态\n                    this.$get_user(() => {\n\t\t\t\t\t\t// 判断是否登录\n                        if (this.oauth.signIn) {\n                            if (this.user.user_id) {\n                                // 执行获取权限并存储\n                                this.$get_auth(this.user.user_group)\n                                func();\n                            } else {\n                                this.$router.push({\n                                    path: \"/login\"\n                                })\n                            }\n                        }\n                    });\n                } else {\n                    if (this.oauth.signIn) {\n                        this.$router.push({\n                            path: \"/login\"\n                        })\n                    } else {\n                        func()\n                    }\n                }\n            } else if (this.oauth.signIn) {\n                if (this.user.user_id) {\n                    func();\n                } else {\n                    this.$router.push({\n                        path: \"/login\"\n                    })\n                }\n            } else {\n                func()\n            }\n\n        },\n\n        /**\n         * 初始化\n         * @param {Object} param 参数\n         * @param {Function} func 回调函数\n         */\n        init: function init(param, func) {\n            var pm = this.events(\"init_before\", Object.assign({}, param)) || param;\n            var msg = this.events(\"init_check\", pm);\n            var ret;\n            if (!msg) {\n                ret = this.events(\"init_main\", pm, func);\n            } else if (func) {\n                func();\n            }\n            return ret;\n        },\n\n        /**\n         * 上传事件\n         * @param {Object} param 提交参数\n         * @param {Function} func 返回函数\n         */\n        upload: function upload(param, func) {\n            var pm = this.events(\"upload_before\", Object.assign({}, param)) || param;\n            var msg = this.events(\"upload_check\", pm);\n            var ret;\n            if (msg) {\n                this.$toast(msg, 'danger');\n            } else {\n                ret = this.events(\"upload_main\", pm, func);\n            }\n            return ret;\n        },\n\n        /**\n         * @description 添加数据\n         * @param {Object} value 要添加的数据\n         */\n        add_main: function add_main(value, func) {\n            var url = this.url ? this.url + \"method=add\" : this.url_add;\n            if (!url) {\n                return;\n            }\n            var _this = this;\n            this.$post(url, value, function(json) {\n                _this.events(\"add_after\", json, func);\n                if (json.result) {\n                    _this.$toast(json.result.tip, json.result.bl ? 'success' : 'danger');\n                } else if (json.error) {\n                    _this.$toast(json.error.message, 'danger');\n                } else {\n                    _this.$toast('添加失败! 原因:是服务器连接失败!', \"danger\");\n                }\n            });\n        },\n\n        /**\n         * @description 删除数据\n         * @param {Object} query 查询条件\n         * @param {Function} func 删除回调函数函数\n         */\n        del_main: function del_main(query, func) {\n            var url = this.url ? this.url + \"method=del\" : this.url_del;\n            if (!url) {\n                return;\n            }\n            var _this = this;\n            this.$get(url, query, function(json) {\n                _this.events(\"del_after\", json, func);\n                if (json.result) {\n                    _this.$toast(json.result.tip, json.result.bl ? 'success' : 'danger');\n                } else if (json.error) {\n                    _this.$toast(json.error.message, 'danger');\n                } else {\n                    _this.$toast('删除失败! 原因:是服务器连接失败!', \"danger\");\n                }\n            });\n        },\n\n        /**\n         * 删除之后事件\n         * @param {Object} json 返回的结果\n         * @param {Object} func 回调函数\n         */\n        del_after: function del_after(json, func) {\n            if (func) {\n                func();\n            }\n        },\n\n        /**\n         * @description 修改数据\n         * @param {Object} value 要修改的数据\n         * @param {Object} value 修改项\n         */\n        set_main: function set_main(value, func) {\n            var url = this.url ? this.url + \"method=set\" : this.url_set;\n            if (!url) {\n                return;\n            }\n            var _this = this;\n            if (!this.query_set || Object.keys(this.query_set).length === 0) {\n                this.query_set = this.query;\n            }\n            this.$post(this.toUrl(this.query_set, url), value, function(json, status) {\n                _this.events(\"set_after\", json, func);\n                if (json.result) {\n                    _this.$toast('更新成功！', 'success');\n                } else if (json.error) {\n                    _this.$toast(json.error.message, 'danger');\n                } else {\n                    _this.$toast(\"服务器连接失败！\", \"danger\");\n                }\n            });\n        },\n\n        /**\n         * 修改成功时执行\n         * @param {Object} json 结果\n         * @param {Object} func 回调函数\n         */\n        set_after: function set_after(json, func) {\n            if (func) {\n                func(json);\n            }\n        },\n\n        /**\n         * @description 查询数据\n         * @param {Object} query 查询参数\n         * @param {Function} func 回调函数\n         */\n        get: function get(query, func) {\n            this.get_main(query, func);\n        },\n\n        /**\n         * @description 查询数据(主程序)\n         * @param {Object} query 查询参数\n         * @param {Function} func 回调函数\n         */\n        get_main: function get_main(query, func) {\n            var url = this.url_get_obj ? this.url_get_obj : this.url;\n            if (url) {\n                var _this = this;\n                this.get_obj(query, function() {\n                    _this.get_create(query, func);\n                });\n            } else {\n                this.get_create(query, func);\n            }\n        },\n\n        /**\n         * 验证请求\n         * @param {Object} param 请求参数\n         */\n        get_obj_check: function get_obj_check(param) {\n            var bl = false;\n            for (var k in param) {\n                if (param[k]) {\n                    bl = true;\n                    break;\n                };\n            }\n            if (bl) {\n                return null;\n            } else {\n                return \"缺少查询条件\";\n            }\n        },\n\n        /**\n         * @description 查询一条数据(主程序)\n         * @param {Object} query 查询条件\n         * @param {Function} func 回调函数\n         */\n        get_obj_main: function get_obj_main(query, func) {\n            // console.log(\"get_obj_main\");\n            var url = this.url_get_obj ? this.url_get_obj : this.url + \"method=get_obj\";\n            if (!url) {\n                return;\n            }\n            var _this = this;\n            this.$get(this.toUrl(query, url), null, function(json, status) {\n                var res = json.result;\n                if (res) {\n                    var obj;\n                    if (res.obj) {\n                        obj = res.obj;\n                        // delete res.obj;\n                    } else {\n                        var list = res.list;\n                        if (list && list.length > 0) {\n                            obj = list[0];\n                        } else {\n                            obj = res;\n                        }\n                    }\n                    if (obj) {\n                        if (!_this.obj || Object.keys(_this.obj).length === 0) {\n                            _this.obj = obj;\n                        } else {\n                            $.push(_this.obj, obj);\n                        }\n                        //\n                        // _this.$changeTime(_this.obj);\n                        if (!_this.form || Object.keys(_this.form).length === 0) {\n                            _this.form = Object.assign({}, _this.obj)\n                        } else {\n                            $.push(_this.form, Object.assign({}, _this.obj));\n                        }\n                        _this.events(\"get_obj_after\", json, func);\n                    }\n                } else if (json.error) {\n                    console.log(json.error.message);\n                } else {\n                    _this.$toast(\"服务器连接失败！\", \"danger\");\n                }\n            });\n        },\n\n        /**\n         * @description 获取到对象后事件\n         * @param {Object} json 响应结果\n         */\n        get_obj_after: function get_obj_after(json, func) {\n            if (func) {\n                func(json);\n            }\n        },\n\n        /**\n         * @description 查询多条数据(主程序)\n         * @param {Object} query 查询条件\n         * @param {Function} func 回调函数\n         */\n        get_list_main: function get_list_main(query, func) {\n            var url = this.url_get_list ? this.url_get_list : this.url;\n            if (!url) {\n                return;\n            }\n            var _this = this;\n            this.loading = 0;\n\n            history.pushState(null, \"\", \"?\" + this.toUrl(this.query));\n            this.$get(this.toUrl(query, url), null, function(json, status) {\n                _this.loading = 100;\n                if (_this.clear_list) {\n                    _this.list.clear();\n                }\n                var res = json.result;\n                if (res) {\n                    _this.page_now = _this.query.page;\n                    _this.list.addList(res.list);\n                    if (res.count !== undefined) {\n                        _this.count = res.count;\n                    }\n                    _this.events(\"get_list_after\", json, func, url);\n                } else if (json.error) {\n                    console.log(json.error.message);\n                } else {\n                    _this.$toast(\"服务器连接失败！\", \"danger\");\n                }\n            });\n        },\n\n        /**\n         * @description 获取到列表事件\n         * @param {Object} res 响应结果\n         */\n        get_list_after: function get_list_after(res, func, url) {\n            if (func) {\n                func(res, url);\n            }\n        },\n\n        /**\n         * 搜索\n         * @param {Object} query 查询条件\n         * @param {Boolean} bl 是否重置再搜索\n         */\n        search: function search(query, func) {\n            if (query) {\n                $.push(this.query, query);\n            }\n            var url = this.url_get_list ? this.url_get_list : this.url;\n            if (url) {\n                this.query.page = 1;\n                this.count = 0;\n                this.first(query, func);\n            }\n        },\n\n        get_create: function get_create(query, func) {\n            if (query) {\n                $.push(this.query, query);\n            }\n            var url = this.url_get_list ? this.url_get_list : this.url;\n            if (url) {\n                this.count = 0;\n                this.first(query, func);\n            }\n        },\n\n        /**\n         * @description 查询多条数据 (首次)\n         * @param {Object} query 查询条件\n         * @param {Function} func 回调函数\n         */\n        first: function first(query, func) {\n            var _this = this;\n            if (!this.count) {\n                var qy = Object.assign({}, this.query);\n                this.get_list(qy, func);\n            } else {\n                this.get_list(query, func);\n            }\n        },\n\n        /**\n         * @description 查询下一页数据\n         * @param {Function} func 回调函数\n         */\n        next: function next(query, func) {\n            console.log(\"next\");\n            var _this = this;\n            _this.get_list(query, function(json, url) {\n                if (json.result) {\n                    var list = json.result.list;\n                    if (list.length > 0) {\n                        var qy = Object.assign({}, query, {\n                            page: query.page + 1\n                        });\n                        if (qy.page <= _this.page_count) {\n                            _this.$get(_this.toUrl(qy, url));\n                        }\n                    }\n                }\n                if (func) {\n                    func(json);\n                }\n            });\n        },\n\n        /**\n         * @description 查询上一页数据\n         * @param {Function} func 回调函数\n         */\n        prev: function prev(query, func) {\n            console.log(\"prev\");\n            var _this = this;\n            this.get_list(query, function(json, url) {\n                if (json.result) {\n                    var list = json.result.list;\n                    if (list.length > 0) {\n                        var qy = Object.assign({}, query, {\n                            page: query.page - 1\n                        });\n                        if (qy.page >= 1) {\n                            _this.$get(_this.toUrl(qy, url));\n                        }\n                    }\n                }\n                if (func) {\n                    func(res);\n                }\n            });\n        },\n\n        /**\n         * 清除数据\n         * @param {Object} query\n         */\n        clear: function clear(query) {\n            $.clear(query);\n        },\n\n        /**\n         * 重置\n         */\n        reset: function reset() {\n            $.clear(this.query);\n            $.push(this.query, this.config);\n            this.get_list();\n        },\n\n        /**\n         * 提交事件\n         * @param {Object} param 表单\n         * @param {Object} func 返回函数\n         */\n        submit: function submit(param, func) {\n            // console.log('提交事件', param);\n            if (!param) {\n                param = this.form;\n            }\n            // 提交前事件\n            var pm = this.events(\"submit_before\", Object.assign({}, param)) || param;\n            // 提交前验证事件\n            var msg = this.events(\"submit_check\", pm);\n            var ret;\n            // 判断错误\n            if (msg) {\n                this.$toast(msg, 'danger');\n            } else {\n                // 提交表单\n                ret = this.events(\"submit_main\", pm, func);\n            }\n            // 返回结果\n            return ret;\n        },\n\n        /**\n         * 提交前事件\n         * @param {Object} param 提交参数\n         */\n        submit_before: function(param) {\n\t\t\t// 循环参数\n        \tfor(var key in param){\n\t\t\t\t// 错误回调\n        \t\ttry{\n        \t\t\tvar value = param[key];\n\t\t\t\t\t// 值判断与值校验\n\t\t\t\t\tconsole.log(\"键 ,值 ,类型\" ,key ,value ,value instanceof Date);\n        \t\t\tif(value && value instanceof Date){\n        \t\t\t\tparam[key] = this.$toTime(value ,\"yyyy-MM-dd hh:mm:ss\");\n        \t\t\t}\n        \t\t}\n        \t\tcatch(err){\n        \t\t\tconsole.log(key ,\"转日期错误：\" ,err ,\"收到请无视!\");\n        \t\t}\n        \t}\n            return param;\n        },\n\n        /**\n         * 提交前验证事件\n         * @param {Object} 请求参数\n         * @return {String} 验证成功返回null, 失败返回错误提示\n         */\n        submit_check: function submit_check(param) {\n            return null;\n        },\n\n        /**\n         * 提交表单\n         */\n        submit_main: function submit_main(param, func) {\n            // this.$changeTime(param);\n            var url = this.url;\n            if (url) {\n                if (this.field) {\n                    var id = param[this.field];\n                    if (id) {\n                        var q = {\n                            method: 'set'\n                        };\n                        q[this.field] = id;\n                        url = this.toUrl(q, url);\n                    } else {\n                        url += \"method=add\"\n                    }\n                } else {\n                    url += \"method=submit\"\n                }\n            } else if (this.url_submit) {\n                url = this.url_submit;\n            } else if (this.field) {\n                var id = param[this.field];\n                // console.log(this.field,id);\n                if (id) {\n                    url = this.url_set;\n                } else {\n                    url = this.url_add;\n                }\n            }\n\n            // console.log('发送请求前', url);\n            if (url) {\n                var _this = this;\n                console.log('发送信息' ,url ,param);\n                url = this.$toUrl(this.query, url);\n                this.$post(url, param, function(json, status) {\n\t\t\t\t\tconsole.log(\"提交结果：\" ,json);\n                    if (json.result) {\n                        _this.events(\"submit_after\", json, func);\n                    } else if (json.error) {\n                        _this.$toast(json.error.message, 'danger');\n                    }\n\t\t\t\t\t// else {\n     //                    _this.$toast(\"服务器连接失败！\", \"danger\");\n     //                }\n                });\n            }\n        },\n\n        /**\n         * @description 获取到对象后事件\n         * @param {Object} json 响应结果\n         * @param {Function} func 回调函数\n         */\n        submit_after: function submit_after(json, func) {\n\t\t\tthis.$toast('提交成功！', 'success');\n            if (func) {\n                func(json);\n            }\n            this.$router.go(-1);\n        },\n\n        /**\n         * 上下翻页\n         * @param {Number} n 加减页码\n         */\n        go: function go(n) {\n            var page = this.query.page + n;\n            this.goTo(page);\n        },\n\n        /**\n         * 跳转指定页\n         * @param {Number} page 页码\n         */\n        goTo: function goTo(page) {\n            if (page < 1) {\n                page = 1;\n            } else if (page > this.page_count) {\n                page = this.page_count;\n            }\n            var query = this.query;\n            var p = query.page;\n            query.page = page;\n            this.$router.push(\"?\" + this.toUrl(query));\n            if (this.page_count !== 0) {\n                if (p + 1 == page) {\n                    this.next(query);\n                } else if (p - 1 == page) {\n                    this.prev(query);\n                } else {\n                    this.first(query);\n                }\n            } else {\n                this.first(query);\n            }\n        },\n\n        /**\n         * @description 转查询参数\n         * @param {Object} obj 被转换的对象\n         * @param {String} url 请求地址\n         * @return {String} url字符串\n         */\n        toUrl: function toUrl(obj, url) {\n            return $.toUrl(obj, url);\n        },\n\n        /**\n         * 初始化前函数\n         */\n        init_before: function init_before(query) {\n            if (!query) {\n                query = this.config;\n            }\n            return query;\n        },\n\n        /**\n         * 初始化\n         */\n        init_main: function init_main(query) {\n            var _this = this;\n            $.push(this.query, query);\n            _this.init_after(function() {\n                _this.get(_this.query);\n            });\n        },\n\n        /**\n         * 初始化后函数\n         */\n        init_after: function init_after(func) {\n            if (func) {\n                func();\n            }\n        },\n\n        /**\n         * @description 上传文件\n         * @param {Function} func 回调函数\n         */\n        upload_main: function upload_main(func) {\n            var url = \"\";\n            if (this.url) {\n                url = this.url + \"method=upload\";\n            } else {\n                url = this.url_upload;\n            }\n\n            if (!param) {\n                param = this.form;\n            }\n            if (msg) {\n                this.$toast(msg, 'danger');\n            } else {\n                this.uploading = 0;\n                var _this = this;\n                this.$upload(url, param, function(json, status) {\n                    _this.uploading = 100;\n                    _this.events(\"upload_after\", json, func);\n                });\n            }\n        },\n\n        /**\n         * @description 上传完成时\n         * @param {Object} json 响应结果\n         * @param {Function} func\n         */\n        upload_after: function upload_after(json, func) {\n            if (json.result) {\n                this.$toast(json.result.tip, json.result.bl ? 'success' : 'danger');\n            } else if (json.error) {\n                this.$toast(json.error.message, 'danger');\n            } else {\n                this.$toast(\"服务器连接失败！\", \"danger\");\n            }\n            if (func) {\n                func();\n            }\n        },\n\n        /**\n         * 结束前\n         * @param {Object} param 参数\n         */\n        end_before: function end_before(param) {\n            // this.reset();\n        },\n\n        /**\n         * 选择项全改\n         */\n        select_all: function select_all() {\n            var bl = !this.select_state;\n            if (!bl) {\n                this.selects = '';\n            } else {\n                var s = '';\n                var list = this.list;\n                for (var i = 0; i < list.length; i++) {\n                    s += '|' + list[i][this.field];\n                }\n                this.selects = s.replace('|', '');\n            }\n            this.select_state = bl;\n        },\n\n        /**\n         * 选择项改变\n         * @param {String|Number} id 选择的ID\n         */\n        select_change: function select_change(id) {\n            var has = false\n            var arr = this.selects.split('|');\n            for (var i = 0; i < arr.length; i++) {\n                var o = arr[i];\n                if (id == o) {\n                    arr.splice(i, 1);\n                    has = true;\n                    break;\n                }\n            }\n            if (!has) {\n                arr.push(id)\n            }\n            var s = arr.join('|');\n            if (s.indexOf('|') == 0) {\n                this.selects = s.substring(1)\n            } else {\n                this.selects = s;\n            }\n        },\n\n        /**\n         * 选择项含有\n         * @param {String|Number} id 选择的ID\n         */\n        select_has: function select_has(id) {\n            var ids = '|' + this.selects + '|';\n            return ids.indexOf('|' + id + '|') !== -1;\n        },\n\n        /**\n         * 选中\n         * @param {Number} index 项目索引\n         */\n        selected: function selected(index) {\n            this.select = index;\n            $.db.set('select', index, 120);\n        },\n\n        /**\n         * 页面改变时\n         * @param {Object} e 事件\n         */\n        page_change: function page_change(e) {\n            var n = Number(e.target.value);\n            if (isNaN(n)) {\n                n = 1;\n            }\n            if (n < 1) {\n                n = 1;\n            } else if (n > this.page_count) {\n                n = this.page_count\n            }\n            this.page_now = n;\n        },\n\n        /**\n         * 获取名称\n         * @param {Array} list 用来取名的列表\n         * @param {String} arr_str id集合\n         * @param {String} key 键\n         * @param {String} name 名\n         * @param {String} span 分隔符\n         */\n        get_name(list, arr_str, key, name, span) {\n            if (!name) {\n                name = \"name\";\n            }\n            var value = \"\";\n            if (arr_str) {\n                if (typeof(arr_str) == 'string') {\n                    if (!span) {\n                        span = ',';\n                    }\n                    var arr = arr_str.split(span);\n                    var id = Number(arr[0]);\n\n                    for (var i = 0; i < list.length; i++) {\n                        var o = list[i];\n                        if (o[key] == id) {\n                            value += '|' + o[name];\n                        }\n                    }\n                } else {\n                    var id = arr_str;\n                    for (var i = 0; i < list.length; i++) {\n                        var o = list[i];\n                        if (o[key] == id) {\n                            value = o[name];\n                            break\n                        }\n                    }\n                }\n            }\n            return value.replace('|', '');\n        },\n\n        /**\n         * 取消并返回\n         */\n        cancel: function cancel() {\n            this.$router.go(-1);\n        },\n\n        /**\n         * 导入数据\n         * @param {Object} file 文件\n         */\n        import_db: function import_db(file) {\n            if (file) {\n                var _this = this;\n                $.confirm(\"是否导入 \" + file.name, \"导入数据\", function() {\n                    $.http.upload(_this.url_import, file, function(json) {\n                        if (json.result) {\n                            $.confirm(json.result.tip, function() {\n                                _this.get();\n                            });\n                        } else if (json.error) {\n                            $.confirm(json.error.message);\n                        } else {\n                            _this.$toast(\"服务器连接失败！\", \"danger\");\n                        }\n                    });\n                });\n            }\n        },\n\n        /**\n         * 导出数据\n         */\n        export_db: function export_db() {\n            var _this = this;\n            if (this.selects) {\n                var query = {};\n                query[this.field] = this.selects;\n                this.$get(_this.url_export, query, function(json) {\n                    var res = json.result;\n                    if (res && res.bl) {\n                        window.location.href = res.url;\n                    }\n                });\n            } else {\n                this.$get(_this.url_export, this.query, function(json) {\n                    var res = json.result;\n                    if (res && res.bl) {\n                        window.location.href = res.url;\n                    }\n                });\n            }\n        },\n\n        /**\n         * 判断是否有下级\n         * @param {Number} id 字段ID\n         * @param {Object} list 数据列表\n         * @return {Number} 返回级别\n         */\n        opens_has_sub: function(id, list) {\n            if (!list) {\n                list = this.list;\n            }\n            var bl = false;\n            var father_id = this.father_id;\n            for (var i = 0; i < list.length; i++) {\n                var o = list[i];\n                if (o[father_id] === id) {\n                    bl = true;\n                    break;\n                }\n            }\n            return bl;\n        },\n\n        /**\n         * 改变展开项\n         * @param {Number} id 唯一主键\n         */\n        opens_change: function opens_change(id) {\n            var index = this.opens.indexOf(id);\n            if (index !== -1) {\n                this.opens.splice(index, 1);\n            } else {\n                var bl = this.opens_has_sub(id);\n                if (bl) {\n                    this.opens.push(id);\n                }\n            }\n            $.db.set('opens', this.opens);\n        },\n\n        /**\n         * 判断是否存在\n         * @param {Number} id 唯一主键\n         * @return {Boolean} 存在返回true, 否则返回false\n         */\n        opens_has: function opens_has(id) {\n            return this.opens.indexOf(id) !== -1;\n        },\n\n        /**\n         * 判断子孙级别, 最大支持5次分叉\n         * @param {Number} fid 祖辈ID\n         * @param {Object} list 数据列表\n         * @return {Number} 返回级别\n         */\n        opens_lv: function opens_lv(fid, list) {\n            if (!list) {\n                list = this.list;\n            }\n            var lv = 0;\n            var father_id = this.father_id;\n            var id = this.field;\n            var num = fid;\n            for (var n = 0; n < 5; n++) {\n                if (num === 0) {\n                    break;\n                }\n                for (var i = 0; i < list.length; i++) {\n                    var o = list[i];\n                    if (o[id] === num) {\n                        lv++;\n                        num = o[father_id];\n                        if (num === 0) {\n                            break;\n                        }\n                    }\n                }\n            }\n            return lv;\n        },\n\n        /**\n         * 筛选内容\n         * @param {Object} value\n         * @param {Object} row\n         */\n        filterState(value, row) {\n            return row.state === value;\n        },\n\n        /**\n         * 多选内容\n         * @param {Object} val\n         */\n        selectionChange(val) {\n            this.selection = val;\n        },\n\n        // 删除消息\n        delInfo() {\n            var list = this.selection;\n            if (list.length === 0) {\n                this.$message({\n                    type: 'info',\n                    message: '选择对象不能为空!'\n                });\n                return;\n            }\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(async () => {\n                await this.delAll(list);\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消删除'\n                });\n            });\n        },\n\n        /**\n         * 批量删除\n         * @param {Object} list 删除对象集\n         */\n        async delAll(list ,func) {\n            var bl = true;\n            var query = {};\n            for (var i = 0; i < list.length; i++) {\n                var obj = list[i];\n                var field = this.field;\n                // 获取删除ID\n                query[field] = obj[field];\n                var o = await this.$get(this.url_del, query);\n                if (o.error) {\n                    this.$message.error('删除失败' + o.error.message);\n                    bl = false;\n                    break;\n                }\n            }\n            if (bl) {\n\t\t\t\tif(func){\n\t\t\t\t\tfunc(list);\n\t\t\t\t}else{\n\t\t\t\t\tthis.$message({\n\t\t\t\t\t    type: 'success',\n\t\t\t\t\t    message: '删除成功!'\n\t\t\t\t\t});\n\t\t\t\t\tthis.get_list()\n\t\t\t\t}\n            }\n        },\n\n        /**\n         * 上传文件\n         * @param {Object} file 文件对象\n         * @param {key} 保存键名\n         */\n        uploadFile(file, key = \"img\") {\n            var _this = this;\n            var form = new FormData() // FormData 对象\n            form.append('file', file) // 文件对象\n            this.$upload(this.url_upload, form, function(json) {\n                if (json.result) {\n                    _this.form[key] = json.result.url;\n                } else {\n                    _this.$toast('上传失败！');\n                }\n            });\n        },\n\n        /**\n         * 选择更改\n         * @param {Object} val\n         */\n        selectionChange(val) {\n            this.selection = val;\n        },\n\n        /**\n         * 条数变更\n         * @param {Object} size\n         */\n        handleSizeChange(size) {\n            this.query.size = size;\n            this.get_list();\n        },\n\n        /**\n         * 页数变更\n         * @param {Object} page\n         */\n        handleCurrentChange(page) {\n            this.query.page = page;\n            this.get_list();\n        },\n\n\t\t/**\n\t\t * 跳转表\n\t\t * @param {Object} form\n\t\t * @param {Object} url\n\t\t */\n\t\tto_table(form,url){\n\t\t\tdelete form[\"examine_state\"];\n\t\t\t$.db.set(\"form\",form);\n\t\t\tthis.$router.push(url);\n\t\t},\n\n        getter(key, url) {\n\n        },\n    },\n    computed: {\n        /**\n         * 分页数量\n         */\n        page_count: function page_count() {\n            return Math.ceil(this.count / this.query.size);\n        }\n    },\n    created: function created() {\n        this.showing = 0;\n        this.check_auth(() => {\n            this.init(this.$route.query);\n        })\n    },\n    mounted: function mounted() {\n        this.showing = 100;\n    },\n    beforeDestroy: function beforeDestroy() {\n        this.events('end_before');\n    }\n};\n"]}]}