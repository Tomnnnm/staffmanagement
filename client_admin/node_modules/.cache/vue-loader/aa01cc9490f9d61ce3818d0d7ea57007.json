{"remainingRequest":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Desktop/CS763460_20220314091634/client_admin/src/views/department_management/view.vue?vue&type=template&id=cc860cc4&","dependencies":[{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/src/views/department_management/view.vue","mtime":1649294746000},{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/cache-loader/dist/cjs.js","mtime":1652753645010},{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1652753645719},{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/cache-loader/dist/cjs.js","mtime":1652753645010},{"path":"/Users/tom/Desktop/CS763460_20220314091634/client_admin/node_modules/vue-loader/lib/index.js","mtime":1652753645676}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImVsLW1haW4iLAogICAgeyBzdGF0aWNDbGFzczogImJnIiB9LAogICAgWwogICAgICBfdm0uaXNfdmlldygpCiAgICAgICAgPyBfYygKICAgICAgICAgICAgImVsLWZvcm0iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcmVmOiAiZm9ybSIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIG1vZGVsOiBfdm0uZm9ybSwKICAgICAgICAgICAgICAgICJzdGF0dXMtaWNvbiI6ICIiLAogICAgICAgICAgICAgICAgImxhYmVsLXdpZHRoIjogIjEyMHB4IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF92bS51c2VyX2dyb3VwID09PSAi566h55CG5ZGYIiB8fAogICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoImdldCIsICJkZXBhcnRtZW50X251bWJlciIpIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgiYWRkIiwgImRlcGFydG1lbnRfbnVtYmVyIikgfHwKICAgICAgICAgICAgICBfdm0uJGNoZWNrX2ZpZWxkKCJzZXQiLCAiZGVwYXJ0bWVudF9udW1iZXIiKQogICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAiZWwtY29sIiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHhzOiAyNCwgc206IDEyLCBsZzogOCB9IH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJlbC1mb3JtLWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAi6YOo6Zeo57yW5Y+3IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3A6ICJkZXBhcnRtZW50X251bWJlciIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0udXNlcl9ncm91cCA9PT0gIueuoeeQhuWRmCIgfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAoX3ZtLmZvcm1bImRlcGFydG1lbnRfbWFuYWdlbWVudF9pZCJdICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJGNoZWNrX2ZpZWxkKCJzZXQiLCAiZGVwYXJ0bWVudF9udW1iZXIiKSkgfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAoIV92bS5mb3JtWyJkZXBhcnRtZW50X21hbmFnZW1lbnRfaWQiXSAmJgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgiYWRkIiwgImRlcGFydG1lbnRfbnVtYmVyIikpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJlbC1pbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJkZXBhcnRtZW50X251bWJlciIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIuivt+i+k+WFpemDqOmXqOe8luWPtyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmRpc2FibGVkT2JqWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkZXBhcnRtZW50X251bWJlcl9pc0Rpc2FibGVkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtWyJkZXBhcnRtZW50X251bWJlciJdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybSwgImRlcGFydG1lbnRfbnVtYmVyIiwgJCR2KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJmb3JtWydkZXBhcnRtZW50X251bWJlciddIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLiRjaGVja19maWVsZCgiZ2V0IiwgImRlcGFydG1lbnRfbnVtYmVyIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5mb3JtWyJkZXBhcnRtZW50X251bWJlciJdKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgIF92bS51c2VyX2dyb3VwID09PSAi566h55CG5ZGYIiB8fAogICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoImdldCIsICJkZXBhcnRtZW50IikgfHwKICAgICAgICAgICAgICBfdm0uJGNoZWNrX2ZpZWxkKCJhZGQiLCAiZGVwYXJ0bWVudCIpIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgic2V0IiwgImRlcGFydG1lbnQiKQogICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAiZWwtY29sIiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHhzOiAyNCwgc206IDEyLCBsZzogOCB9IH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJlbC1mb3JtLWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGxhYmVsOiAi6YOo6ZeoIiwgcHJvcDogImRlcGFydG1lbnQiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS51c2VyX2dyb3VwID09PSAi566h55CG5ZGYIiB8fAogICAgICAgICAgICAgICAgICAgICAgICAgIChfdm0uZm9ybVsiZGVwYXJ0bWVudF9tYW5hZ2VtZW50X2lkIl0gJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoInNldCIsICJkZXBhcnRtZW50IikpIHx8CiAgICAgICAgICAgICAgICAgICAgICAgICAgKCFfdm0uZm9ybVsiZGVwYXJ0bWVudF9tYW5hZ2VtZW50X2lkIl0gJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoImFkZCIsICJkZXBhcnRtZW50IikpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJlbC1pbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJkZXBhcnRtZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi6K+36L6T5YWl6YOo6ZeoIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZGlzYWJsZWRPYmpbImRlcGFydG1lbnRfaXNEaXNhYmxlZCJdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtWyJkZXBhcnRtZW50Il0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5mb3JtLCAiZGVwYXJ0bWVudCIsICQkdikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZm9ybVsnZGVwYXJ0bWVudCddIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLiRjaGVja19maWVsZCgiZ2V0IiwgImRlcGFydG1lbnQiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLmZvcm1bImRlcGFydG1lbnQiXSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBfdm0udXNlcl9ncm91cCA9PT0gIueuoeeQhuWRmCIgfHwKICAgICAgICAgICAgICBfdm0uJGNoZWNrX2ZpZWxkKCJnZXQiLCAicGVyc29uX2luX2NoYXJnZSIpIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgiYWRkIiwgInBlcnNvbl9pbl9jaGFyZ2UiKSB8fAogICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoInNldCIsICJwZXJzb25faW5fY2hhcmdlIikKICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgImVsLWNvbCIsCiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB4czogMjQsIHNtOiAxMiwgbGc6IDggfSB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZWwtZm9ybS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGxhYmVsOiAi6LSf6LSj5Lq6IiwgcHJvcDogInBlcnNvbl9pbl9jaGFyZ2UiIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS51c2VyX2dyb3VwID09PSAi566h55CG5ZGYIiB8fAogICAgICAgICAgICAgICAgICAgICAgICAgIChfdm0uZm9ybVsiZGVwYXJ0bWVudF9tYW5hZ2VtZW50X2lkIl0gJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoInNldCIsICJwZXJzb25faW5fY2hhcmdlIikpIHx8CiAgICAgICAgICAgICAgICAgICAgICAgICAgKCFfdm0uZm9ybVsiZGVwYXJ0bWVudF9tYW5hZ2VtZW50X2lkIl0gJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoImFkZCIsICJwZXJzb25faW5fY2hhcmdlIikpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJlbC1pbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJwZXJzb25faW5fY2hhcmdlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi6K+36L6T5YWl6LSf6LSj5Lq6IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZGlzYWJsZWRPYmpbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInBlcnNvbl9pbl9jaGFyZ2VfaXNEaXNhYmxlZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybVsicGVyc29uX2luX2NoYXJnZSJdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybSwgInBlcnNvbl9pbl9jaGFyZ2UiLCAkJHYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImZvcm1bJ3BlcnNvbl9pbl9jaGFyZ2UnXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS4kY2hlY2tfZmllbGQoImdldCIsICJwZXJzb25faW5fY2hhcmdlIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5mb3JtWyJwZXJzb25faW5fY2hhcmdlIl0pKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgX3ZtLnVzZXJfZ3JvdXAgPT09ICLnrqHnkIblkZgiIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgiZ2V0IiwgIm51bWJlcl9vZl9kZXBhcnRtZW50cyIpIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgiYWRkIiwgIm51bWJlcl9vZl9kZXBhcnRtZW50cyIpIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgic2V0IiwgIm51bWJlcl9vZl9kZXBhcnRtZW50cyIpCiAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICJlbC1jb2wiLAogICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgeHM6IDI0LCBzbTogMTIsIGxnOiA4IH0gfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImVsLWZvcm0taXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICLpg6jpl6jkurrmlbAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcDogIm51bWJlcl9vZl9kZXBhcnRtZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0udXNlcl9ncm91cCA9PT0gIueuoeeQhuWRmCIgfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAoX3ZtLmZvcm1bImRlcGFydG1lbnRfbWFuYWdlbWVudF9pZCJdICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJGNoZWNrX2ZpZWxkKCJzZXQiLCAibnVtYmVyX29mX2RlcGFydG1lbnRzIikpIHx8CiAgICAgICAgICAgICAgICAgICAgICAgICAgKCFfdm0uZm9ybVsiZGVwYXJ0bWVudF9tYW5hZ2VtZW50X2lkIl0gJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoImFkZCIsICJudW1iZXJfb2ZfZGVwYXJ0bWVudHMiKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImVsLWlucHV0LW51bWJlciIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogIm51bWJlcl9vZl9kZXBhcnRtZW50cyIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtWyJudW1iZXJfb2ZfZGVwYXJ0bWVudHMiXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm51bWJlcl9vZl9kZXBhcnRtZW50cyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9uKCQkdikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJmb3JtWydudW1iZXJfb2ZfZGVwYXJ0bWVudHMnXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS4kY2hlY2tfZmllbGQoImdldCIsICJudW1iZXJfb2ZfZGVwYXJ0bWVudHMiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uZm9ybVsibnVtYmVyX29mX2RlcGFydG1lbnRzIl0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgX3ZtLnVzZXJfZ3JvdXAgPT09ICLnrqHnkIblkZgiIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgiZ2V0IiwgImRhdGVfb2ZfaW5jb3Jwb3JhdGlvbiIpIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgiYWRkIiwgImRhdGVfb2ZfaW5jb3Jwb3JhdGlvbiIpIHx8CiAgICAgICAgICAgICAgX3ZtLiRjaGVja19maWVsZCgic2V0IiwgImRhdGVfb2ZfaW5jb3Jwb3JhdGlvbiIpCiAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICJlbC1jb2wiLAogICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgeHM6IDI0LCBzbTogMTIsIGxnOiA4IH0gfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImVsLWZvcm0taXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICLmiJDnq4vml6XmnJ8iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcDogImRhdGVfb2ZfaW5jb3Jwb3JhdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0udXNlcl9ncm91cCA9PT0gIueuoeeQhuWRmCIgfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAoX3ZtLmZvcm1bImRlcGFydG1lbnRfbWFuYWdlbWVudF9pZCJdICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJGNoZWNrX2ZpZWxkKCJzZXQiLCAiZGF0ZV9vZl9pbmNvcnBvcmF0aW9uIikpIHx8CiAgICAgICAgICAgICAgICAgICAgICAgICAgKCFfdm0uZm9ybVsiZGVwYXJ0bWVudF9tYW5hZ2VtZW50X2lkIl0gJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kY2hlY2tfZmllbGQoImFkZCIsICJkYXRlX29mX2luY29ycG9yYXRpb24iKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImVsLWRhdGUtcGlja2VyIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmRpc2FibGVkT2JqWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkYXRlX29mX2luY29ycG9yYXRpb25faXNEaXNhYmxlZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAiZGF0ZV9vZl9pbmNvcnBvcmF0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJkYXRlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi6YCJ5oup5pel5pyfIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybVsiZGF0ZV9vZl9pbmNvcnBvcmF0aW9uIl0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkYXRlX29mX2luY29ycG9yYXRpb24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkdgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImZvcm1bJ2RhdGVfb2ZfaW5jb3Jwb3JhdGlvbiddIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLiRjaGVja19maWVsZCgiZ2V0IiwgImRhdGVfb2ZfaW5jb3Jwb3JhdGlvbiIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5mb3JtWyJkYXRlX29mX2luY29ycG9yYXRpb24iXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJlbC1jb2wiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyB4czogMjQsIHNtOiAxMiwgbGc6IDggfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZWwtZm9ybS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImVsLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAicHJpbWFyeSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnN1Ym1pdCgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLmj5DkuqQiKV0KICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImVsLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNhbmNlbCgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLlj5bmtogiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICA6IF92bS5fZSgpCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}